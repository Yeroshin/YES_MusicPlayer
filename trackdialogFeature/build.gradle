plugins {
    id 'com.android.library'
   // alias(libs.plugins.androidLibrary)
   // id 'com.android.application'
  //  alias(libs.plugins.androidLibrary)
    id 'org.jetbrains.kotlin.android'
  //  alias(libs.plugins.kotlinAndroid)
   // id 'kotlin-kapt'
    alias(libs.plugins.kotlinKapt)
    alias(libs.plugins.devtoolsKsp)
   // id 'kotlin-android'
//id "com.google.devtools.ksp"
}
/*plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.kotlinAndroid)

}*/
//com.android.ddmlib.DdmPreferences.setTimeOut(600000)
android {
    compileSdk 33
    packagingOptions {
        resources {
            excludes += ['MenuRepositoryImplOLDTest.kt', 'META-INF/LICENSE-notice.md', 'META-INF/LICENSE.md','MANIFEST.MF','META-INF/com.google.dagger_dagger.version']
        }
    }
    /* testOptions {
         unitTests.all {
             useJUnitPlatform()
         }
     }*/

    defaultConfig {
        minSdk 21
        targetSdk 33
        //multiDexEnabled true
        // testInstrumentationRunner "com.yes.trackdialogfeature.DexOpeningTestRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    /* packagingOptions {
         exclude("META-INF/LICENSE.md")

     }*/


    testOptions {
        animationsDisabled = true
        unitTests.all {
            useJUnitPlatform()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
  /*  kotlin {
        jvmToolchain(11)
    }*/
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding = true
    }
    namespace 'com.yes.trackdialogfeature'
   /* installation {
        timeOutInMs 30000
    }*/
    sourceSets {
        androidTest {
            manifest.srcFile 'src/androidTest/AndroidManifest.xml'
        }
    }

}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':coreUI')

    testImplementation project(path: ':shared-test')
    androidTestImplementation project(path: ':shared-test')
    //room
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler

   /// kaptAndroidTest libs.androidx.room.testing

    // To use Kotlin annotation processing tool (kapt)
   /* kapt "androidx.room:room-compiler:$room_version"*/

    //////////////


    //androidTestImplementation 'androidx.multidex:multidex:2.0.1'
    // androidTestImplementation project(path: ':app')

    //  implementation 'androidx.core:core-ktx:1.9.0'
    implementation "com.google.android.material:material:1.8.0"

    //viewModel
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"



    //Dagger/////////////////////
    implementation libs.dagger
    androidTestImplementation libs.dagger
    kapt libs.dagger.compiler
    kaptAndroidTest libs.dagger.compiler
    //  kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.6.0" //ImportantSHIT!!!

    //testJunit4
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.junit
    ///////////
    //testJunit5
    /*testImplementation "org.junit.jupiter:junit-jupiter:5.9.3"
    androidTestImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'*/

    testImplementation libs.junit.jupiter
    testRuntimeOnly libs.junit.jupiter
    //junit5 seems to not worked on android
   /* androidTestImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    androidTestRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.9.3'*/

    ////////////
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    //DO NOT TOUCH - GOOGLE BUG HERE!!!
    /*debugImplementation("androidx.fragment:fragment-testing-manifest:1.6.0-alpha04")
    androidTestImplementation("androidx.fragment:fragment-testing:1.6.0-alpha04")*/
   /* debugImplementation("androidx.fragment:fragment-testing-manifest:1.6.0")
    androidTestImplementation("androidx.fragment:fragment-testing:1.6.0")*/
    /////////////////////////////////////////////////////////////////
    debugImplementation "androidx.fragment:fragment-testing:1.6.1"
    implementation "androidx.fragment:fragment-ktx:1.6.1"
   // debugImplementation "androidx.fragment:fragment-testing:1.5.7"
    //implementation "androidx.fragment:fragment-ktx:1.5.7"
    //////////////////////////////////////
    ///////////////////////////////////
    //testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    ///////////////////////////
    // Mock objects
    //DO NOT TOUCH - last version conflicts with espresso!
   // testImplementation libs.mockk
   /* def mockkVersion = "1.12.2"
    testImplementation "io.mockk:mockk:$mockkVersion"*/
   testImplementation libs.mockk
 // androidTestImplementation libs.mockk.android - conflicts wit espresso!!!!
    //shit here!!!!!
    //androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    // testImplementation "io.mockk:mockk-android:${mockkVersion}"
    // testImplementation "io.mockk:mockk-agent:${mockkVersion}"
    //noinspection GradleDependency
    // androidTestImplementation "io.mockk:mockk-agent:${mockkVersion}"
    ////////////////////////
    //turbine
    testImplementation libs.turbine
  //  androidTestImplementation libs.turbine
    // Run Blocking Test
    def coreTestingVersion = "1.1.1"
    //Coroutines
    testImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.kotlinx.coroutines.test
    //Espresso
  /*  androidTestImplementation libs.hamcrest
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'*/
    androidTestImplementation libs.androidx.espresso.contrib
    androidTestImplementation libs.espresso.core
    implementation libs.espresso.idling.resource
    androidTestImplementation libs.androidx.runner
    androidTestImplementation libs.androidx.rules
    //androidTestImplementation (libs.hamcrest.library)

   // testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
   // implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    /* def fragment_version = "1.5.6"
     debugImplementation "androidx.fragment:fragment-testing:$fragment_version"*/

    //tmp
  //  debugImplementation "androidx.test:monitor:1.6.0"
//Shit for mockk to run on api<p
    implementation 'com.github.tmurakami:dexopener:2.0.5'

  //  implementation 'androidx.core:core-ktx:1.3.2'
  //  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
